(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[75],{YzxU:function(s,t,i){"use strict";var o=i("cOls"),l=i.n(o);l.a},cOls:function(s,t,i){},ojzL:function(s,t,i){"use strict";i.r(t);var o=function(){var s=this,t=s.$createElement,i=s._self._c||t;return i("q-page",{staticClass:"row justify-center",attrs:{padding:""}},[i("div",{staticStyle:{width:"800px","max-width":"90vw"}},[i("div",{staticClass:"row justify-center"},[!s.$q.platform.is.desktop||s.$q.platform.within.iframe?i("q-alert",{staticClass:"q-mb-lg",attrs:{color:"warning",inline:""}},[s._v("\n        Best viewed on a desktop.\n      ")]):s._e()],1),s._v(" "),i("div",{staticClass:"flex-row-docs"},[s._v("\n      Utilize breakpoint-specific column classes for equal-width columns. Add any number of unit-less classes for each breakpoint you need and every column will be the same width.\n\n      "),i("h4",[s._v("Equal-width")]),s._v("\n      For example, here are two grid layouts that apply to every device and viewport, from xs to xl.\n\n      "),i("div",{staticClass:"doc-container"},[i("div",{staticClass:"row"},[i("div",{staticClass:"col"},[s._v("\n            .col\n          ")]),s._v(" "),i("div",{staticClass:"col"},[s._v("\n            .col\n          ")])]),s._v(" "),i("div",{staticClass:"row"},[i("div",{staticClass:"col"},[s._v("\n            .col\n          ")]),s._v(" "),i("div",{staticClass:"col"},[s._v("\n            .col\n          ")]),s._v(" "),i("div",{staticClass:"col"},[s._v("\n            .col\n          ")])])]),s._v(" "),i("h4",[s._v("Setting one column width")]),s._v("\n      Auto-layout for flexbox grid columns also means you can set the width of one column and the others will automatically resize around it. You may use predefined grid classes (as shown below) or inline widths. Note that the other columns will resize no matter the width of the center column.\n\n      "),i("div",{staticClass:"doc-container"},[i("div",{staticClass:"row"},[i("div",{staticClass:"col"},[s._v("\n            .col\n          ")]),s._v(" "),i("div",{staticClass:"col-6"},[s._v("\n            .col-6 (wider)\n          ")]),s._v(" "),i("div",{staticClass:"col"},[s._v("\n            .col\n          ")])]),s._v(" "),i("div",{staticClass:"row"},[i("div",{staticClass:"col"},[s._v("\n            .col\n          ")]),s._v(" "),i("div",{staticClass:"col-5"},[s._v("\n            .col-5 (wider)\n          ")]),s._v(" "),i("div",{staticClass:"col"},[s._v("\n            .col\n          ")])])]),s._v(" "),i("h4",[s._v("Variable width content")]),s._v("\n      Using the col-{breakpoint}-auto classes, columns can size itself based on the natural width of its content. This is super handy with single line content like inputs, numbers, etc (see last example on this page). This, in conjunction with horizontal alignment classes, is very useful for centering layouts with uneven column sizes as viewport width changes.\n\n      "),i("div",{staticClass:"doc-container with-bg"},[i("div",{staticClass:"row justify-center"},[i("div",{staticClass:"col-12 col-md-2"},[s._v("\n            .col-12 .col-md-2\n          ")]),s._v(" "),i("div",{staticClass:"col-12 col-md-auto"},[s._v("\n            .col-12 .col-md-auto (Variable width content)\n          ")]),s._v(" "),i("div",{staticClass:"col-12 col-md-2"},[s._v("\n            .col-12 .col-md-2\n          ")])]),s._v(" "),i("div",{staticClass:"row"},[i("div",{staticClass:"col"},[s._v("\n            .col\n          ")]),s._v(" "),i("div",{staticClass:"col-12 col-md-auto"},[s._v("\n            .col-12 .col-md-auto (Variable width content)\n          ")]),s._v(" "),i("div",{staticClass:"col"},[s._v("\n            .col\n          ")])])]),s._v(" "),i("h3",[s._v("Responsive classes")]),s._v("\n      The grid includes five tiers of predefined classes for building complex responsive layouts. Customize the size of your columns on extra small, small, medium, large, or extra large devices however you see fit.\n\n      "),i("h4",[s._v("All breakpoints")]),s._v("\n      For grids that are the same from the smallest of devices to the largest, use the .col and .col-* classes. Specify a numbered class when you need a particularly sized column; otherwise, feel free to stick to .col.\n\n      "),i("div",{staticClass:"doc-container"},[i("div",{staticClass:"row"},[i("div",{staticClass:"col"},[s._v("col")]),s._v(" "),i("div",{staticClass:"col"},[s._v("col")]),s._v(" "),i("div",{staticClass:"col"},[s._v("col")]),s._v(" "),i("div",{staticClass:"col"},[s._v("col")])]),s._v(" "),i("div",{staticClass:"row"},[i("div",{staticClass:"col-8"},[s._v("col-8")]),s._v(" "),i("div",{staticClass:"col-4"},[s._v("col-4")])])]),s._v(" "),i("h4",[s._v("Stacked to horizontal")]),s._v("\n      Using a single set of .col-sm-* classes, you can create a basic grid system that starts out stacked on small devices before becoming horizontal on desktop (medium) devices.\n\n      "),i("div",{staticClass:"doc-container"},[i("div",{staticClass:"row"},[i("div",{staticClass:"col-sm-8"},[s._v("col-sm-8")]),s._v(" "),i("div",{staticClass:"col-sm-4"},[s._v("col-sm-4")])]),s._v(" "),i("div",{staticClass:"row"},[i("div",{staticClass:"col-sm"},[s._v("col-sm")]),s._v(" "),i("div",{staticClass:"col-sm"},[s._v("col-sm")]),s._v(" "),i("div",{staticClass:"col-sm"},[s._v("col-sm")])])]),s._v(" "),i("h4",[s._v("Mix and match")]),s._v("\n      Donâ€™t want your columns to simply stack in some grid tiers? Use a combination of different classes for each tier as needed. See the example below for a better idea of how it all works.\n      "),i("div",{staticClass:"doc-container"},[i("div",{staticClass:"row"},[i("div",{staticClass:"col col-md-8"},[s._v(".col .col-md-8")]),s._v(" "),i("div",{staticClass:"col-6 col-md-4"},[s._v(".col-6 .col-md-4")])]),s._v(" "),i("div",{staticClass:"row"},[i("div",{staticClass:"col-6 col-md-4"},[s._v(".col-6 .col-md-4")]),s._v(" "),i("div",{staticClass:"col-6 col-md-4"},[s._v(".col-6 .col-md-4")]),s._v(" "),i("div",{staticClass:"col-6 col-md-4"},[s._v(".col-6 .col-md-4")])]),s._v(" "),i("div",{staticClass:"row"},[i("div",{staticClass:"col-6"},[s._v(".col-6")]),s._v(" "),i("div",{staticClass:"col-6"},[s._v(".col-6")])])]),s._v(" "),i("h3",[s._v("Alignment")]),s._v("\n      Use flexbox alignment utilities to vertically and horizontally align columns.\n\n      "),i("h4",[s._v("Vertical alignment")]),s._v(" "),i("div",{staticClass:"doc-container minheight-rows with-bg"},[i("p",[s._v("Class: items-start")]),s._v(" "),i("div",{staticClass:"row items-start"},[i("div",{staticClass:"col"},[s._v("\n            One of three cols\n          ")]),s._v(" "),i("div",{staticClass:"col"},[s._v("\n            One of three cols\n          ")]),s._v(" "),i("div",{staticClass:"col"},[s._v("\n            One of three cols\n          ")])])]),s._v(" "),i("div",{staticClass:"doc-container minheight-rows with-bg"},[i("p",[s._v("Class: items-center")]),s._v(" "),i("div",{staticClass:"row items-center"},[i("div",{staticClass:"col"},[s._v("\n            One of three cols\n          ")]),s._v(" "),i("div",{staticClass:"col"},[s._v("\n            One of three cols\n          ")]),s._v(" "),i("div",{staticClass:"col"},[s._v("\n            One of three cols\n          ")])])]),s._v(" "),i("div",{staticClass:"doc-container minheight-rows with-bg"},[i("p",[s._v("Class: items-end")]),s._v(" "),i("div",{staticClass:"row items-end"},[i("div",{staticClass:"col"},[s._v("\n            One of three cols\n          ")]),s._v(" "),i("div",{staticClass:"col"},[s._v("\n            One of three cols\n          ")]),s._v(" "),i("div",{staticClass:"col"},[s._v("\n            One of three cols\n          ")])])]),s._v(" "),i("div",{staticClass:"doc-container minheight-rows with-bg"},[i("p",[s._v("Self Alignment")]),s._v(" "),i("div",{staticClass:"row"},[i("div",{staticClass:"col self-start"},[s._v("\n            .self-start\n          ")]),s._v(" "),i("div",{staticClass:"col self-center"},[s._v("\n            .self-center\n          ")]),s._v(" "),i("div",{staticClass:"col self-end"},[s._v("\n            .self-end\n          ")])])]),s._v(" "),i("h4",[s._v("Horizontal alignment")]),s._v(" "),i("div",{staticClass:"doc-container with-bg"},[i("p",[s._v("Class: justify-start")]),s._v(" "),i("div",{staticClass:"row justify-start"},[i("div",{staticClass:"col-4"},[s._v("\n            One of two cols\n          ")]),s._v(" "),i("div",{staticClass:"col-4"},[s._v("\n            One of two cols\n          ")])])]),s._v(" "),i("div",{staticClass:"doc-container with-bg"},[i("p",[s._v("Class: justify-center")]),s._v(" "),i("div",{staticClass:"row justify-center"},[i("div",{staticClass:"col-4"},[s._v("\n            One of two cols\n          ")]),s._v(" "),i("div",{staticClass:"col-4"},[s._v("\n            One of two cols\n          ")])])]),s._v(" "),i("div",{staticClass:"doc-container with-bg"},[i("p",[s._v("Class: justify-end")]),s._v(" "),i("div",{staticClass:"row justify-end"},[i("div",{staticClass:"col-4"},[s._v("\n            One of two cols\n          ")]),s._v(" "),i("div",{staticClass:"col-4"},[s._v("\n            One of two cols\n          ")])])]),s._v(" "),i("div",{staticClass:"doc-container with-bg"},[i("p",[s._v("Class: justify-around")]),s._v(" "),i("div",{staticClass:"row justify-around"},[i("div",{staticClass:"col-4"},[s._v("\n            One of two cols\n          ")]),s._v(" "),i("div",{staticClass:"col-4"},[s._v("\n            One of two cols\n          ")])])]),s._v(" "),i("div",{staticClass:"doc-container with-bg"},[i("p",[s._v("Class: justify-between")]),s._v(" "),i("div",{staticClass:"row justify-between"},[i("div",{staticClass:"col-4"},[s._v("\n            One of two cols\n          ")]),s._v(" "),i("div",{staticClass:"col-4"},[s._v("\n            One of two cols\n          ")])])]),s._v(" "),i("h4",[s._v("Column wrapping")]),s._v("\n      If more than 12 columns are placed within a single row, each group of extra columns will, as one unit, wrap onto a new line.\n\n      "),i("div",{staticClass:"doc-container with-bg"},[i("div",{staticClass:"row"},[i("div",{staticClass:"col-9"},[s._v(".col-9")]),s._v(" "),i("div",{staticClass:"col-6"},[s._v(".col-6"),i("br"),s._v("Since 9 + 4 = 13 > 12, this 4-column-wide div gets wrapped onto a new line as one contiguous unit.")]),s._v(" "),i("div",{staticClass:"col-5"},[s._v(".col-5"),i("br"),s._v("Subsequent columns continue along the new line.")])])]),s._v(" "),i("div",{staticClass:"doc-container"},[i("div",{staticClass:"row"},[i("div",{staticClass:"col-6 col-sm-3"},[s._v(".col-6 .col-sm-3")]),s._v(" "),i("div",{staticClass:"col-6 col-sm-3"},[s._v(".col-6 .col-sm-3")]),s._v(" "),i("div",{staticClass:"col-6 col-sm-3"},[s._v(".col-6 .col-sm-3")]),s._v(" "),i("div",{staticClass:"col-6 col-sm-3"},[s._v(".col-6 .col-sm-3")])])]),s._v(" "),i("h3",[s._v("Reordering")]),s._v(" "),i("h4",[s._v("Reverse")]),s._v("\n\n      Class: reverse\n      "),i("div",{staticClass:"doc-container"},[i("div",{staticClass:"row reverse"},[i("div",{staticClass:"col"},[s._v("\n            First, but last\n          ")]),s._v(" "),i("div",{staticClass:"col"},[s._v("\n            Second, unchanged\n          ")]),s._v(" "),i("div",{staticClass:"col"},[s._v("\n            Third, but first\n          ")])])]),s._v(" "),i("h4",[s._v("Flex order")]),s._v("\n      Use flexbox utilities for controlling the visual order of your content.\n\n      "),i("div",{staticClass:"doc-container"},[i("div",{staticClass:"row"},[i("div",{staticClass:"col order-none"},[s._v("\n            First, but unordered"),i("br"),s._v("(.order-none)\n          ")]),s._v(" "),i("div",{staticClass:"col order-last"},[s._v("\n            Second, but last"),i("br"),s._v("(.order-last)\n          ")]),s._v(" "),i("div",{staticClass:"col order-first"},[s._v("\n            Third, but first"),i("br"),s._v("(.order-first)\n          ")])])]),s._v('\n\n      Or you could add CSS with "order: N" for a specific order.\n\n      '),i("h4",[s._v("Offsetting columns")]),s._v("\n      Move columns to the right using .offset-md-* classes. These classes increase the left margin of a column by * columns. For example, .offset-md-4 moves .col-md-4 over four columns.\n\n      "),i("div",{staticClass:"doc-container with-bg"},[i("div",{staticClass:"row"},[i("div",{staticClass:"col-md-4"},[s._v(".col-md-4")]),s._v(" "),i("div",{staticClass:"col-md-4 offset-md-4"},[s._v(".col-md-4 .offset-md-4")])]),s._v(" "),i("div",{staticClass:"row"},[i("div",{staticClass:"col-md-3 offset-md-3"},[s._v(".col-md-3 .offset-md-3")]),s._v(" "),i("div",{staticClass:"col-md-3 offset-md-3"},[s._v(".col-md-3 .offset-md-3")])]),s._v(" "),i("div",{staticClass:"row"},[i("div",{staticClass:"col-md-6 offset-md-3"},[s._v(".col-md-6 .offset-md-3")])])]),s._v(" "),i("h3",[s._v("Nesting")]),s._v("\n      To nest your content with the default grid, add a new .row and set of .col-sm-* columns within an existing .col-sm-* column. Nested rows should include a set of columns that add up to 12 or fewer (it is not required that you use all 12 available columns).\n\n      "),i("div",{staticClass:"doc-container"},[i("div",{staticClass:"row"},[i("div",{staticClass:"col-sm-9"},[i("p",[s._v("Level 1: .col-sm-9")]),s._v(" "),i("div",{staticClass:"row"},[i("div",{staticClass:"col-8 col-sm-6"},[s._v("\n                Level 2: .col-8 .col-sm-6\n              ")]),s._v(" "),i("div",{staticClass:"col-4 col-sm-6"},[s._v("\n                Level 2: .col-4 .col-sm-6\n              ")])])])])]),s._v(" "),i("div",{staticClass:"doc-container doc-container-small-padding"},[i("div",{staticClass:"row"},[i("div",{staticClass:"col-7"},[i("div",{staticClass:"row no-wrap"},[i("div",{staticClass:"col-8"},[i("div",{staticClass:"row"},[i("div",{staticClass:"col-4"},[s._v("Â ")]),s._v(" "),i("div",{staticClass:"col-8"},[s._v("Â ")])])]),s._v(" "),i("div",{staticClass:"col-4"},[i("div",{staticClass:"row"},[i("div",{staticClass:"col"},[s._v("Â ")])])])])]),s._v(" "),i("div",{staticClass:"col-5"},[i("div",{staticClass:"row"},[i("div",{staticClass:"col-12"},[i("div",{staticClass:"row"},[i("div",{staticClass:"col-6"},[s._v("Â ")]),s._v(" "),i("div",{staticClass:"col-4"},[s._v("Â ")])])])])])])])])])])},l=[];o._withStripped=!0;i("YzxU");var a=i("crz2"),c={},e=Object(a["a"])(c,o,l,!1,null,null,null);t["default"]=e.exports}}]);